server {
    listen 443 ssl;
    listen 80;
    server_name admin.ai4cert.com;
    # server_name 192.168.27.102;

    # Define the specified charset to the “Content-Type” response header field
    charset utf-8;

    ssl_certificate /etc/ssl/certs/ai4cert.com.pem;
    ssl_certificate_key /etc/ssl/private/ai4cert.com.key;

    location / {
        proxy_pass http://34.72.31.186:2096/;
        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
        # proxy_redirect off;
        # proxy_http_version 1.1;
        # proxy_cache_bypass $http_upgrade;
        # proxy_set_header   Upgrade $http_upgrade;
        # proxy_set_header   Connection keep-alive;
        # proxy_set_header   X-Real-IP $remote_addr;
        # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header   X-Forwarded-Proto $scheme;
        # proxy_set_header   X-Forwarded-Host $server_name;

    }
}

server {
    listen 443 ssl;
    listen 80;
    server_name be.ai4cert.com;
    charset utf-8;
    ssl_certificate /etc/ssl/certs/ai4cert.com.pem;
    ssl_certificate_key /etc/ssl/private/ai4cert.com.key;

    location / {
        proxy_pass http://34.72.31.186:5126/;
        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
      

    }
}

server {
    listen 443 ssl;
    listen 80;
    server_name monitoring.ai4cert.com;
    charset utf-8;
    ssl_certificate /etc/ssl/certs/ai4cert.com.pem;
    ssl_certificate_key /etc/ssl/private/ai4cert.com.key;

    location / {
        proxy_pass http://34.70.183.147:5601/;
        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
      

    }
}







